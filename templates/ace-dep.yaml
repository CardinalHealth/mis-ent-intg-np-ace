{{- $webPort := .Values.service.webPort -}}
{{- $acePort := .Values.service.acePort -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 1
  labels:
    run: {{.Values.name}}
  name: {{.Values.name}}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }} 
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: {{.Values.name}}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      {{if .Values.annotations}}
      annotations:
        {{if .Values.annotations.prdName}}
        productName: {{.Values.annotations.prdName}}
        {{- end }}
        {{if .Values.annotations.prdId}}
        productID: {{.Values.annotations.prdId}}
        {{- end }}
        {{if .Values.annotations.prdChargContainers}}
        productChargedContainers: {{.Values.annotations.prdChargContainers}}
        {{- end }}
        {{if .Values.annotations.prdMetrics}}
        productMetric: {{.Values.annotations.prdMetrics}}
        {{- end }}
      {{- end }}

      
      labels:
        run: {{ .Values.name }}
        version: {{ .Values.version }}
        {{if .Values.APMID}}
        APMID: {{ .Values.APMID }}
        {{- end }}
        {{if .Values.AppAlertGroup}}
        AppAlertGroup: {{ .Values.AppAlertGroup }}
        {{- end }}
        {{if .Values.MIR3RecipientApp}}
        MIR3RecipientApp: {{ .Values.MIR3RecipientApp }}
        {{- end }}
        {{if .Values.ManagementZone}}
        ManagementZone: {{ .Values.ManagementZone }}
        {{- end }}
        {{if .Values.Environment}}
        Environment: {{ .Values.Environment }}
        {{- end }}
      {{if .Values.labels}}
      {{- with .Values.labels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}

    spec:
    {{if .Values.nodeSelector}}
      nodeSelector:
        run: {{ .Values.nodeSelector.label }}
    {{- end}}
    {{if .Values.tolerations}}
      tolerations:
      - key: {{ .Values.tolerations.key }}
        operator: {{ .Values.tolerations.operator }}
        value: {{ .Values.tolerations.value }}
        effect: {{ .Values.tolerations.effect }}
    {{- end}}
      containers:
      - name: {{.Values.name}}
        envFrom:
          - configMapRef:
              name: {{ .Values.name }}-env-config 
        image: {{.Values.image.repository}}:{{.Values.image.tag}}
        imagePullPolicy: Always
        ports:
        - containerPort: {{ $webPort }}
          protocol: TCP
          name: webui
        {{if $acePort}}
        - containerPort: {{ $acePort }}
          protocol: TCP
          name: ace
        {{- end}}
        {{if .Values.resources}}
        resources:
        {{if eq .Values.resources.limits.enable "true"}}
          limits:
            {{if .Values.resources.limits.cpu}}
            cpu: {{.Values.resources.limits.cpu}}
            {{- end}}
            {{if .Values.resources.limits.memory}}
            memory: {{.Values.resources.limits.memory}}
            {{- end}}
        {{- end}}
        {{if eq .Values.resources.requests.enable "true"}}
          requests:
            {{if .Values.resources.requests.cpu}}
            cpu: {{.Values.resources.requests.cpu}}
            {{- end}}
            {{if .Values.resources.requests.memory}}
            memory: {{.Values.resources.requests.memory}}
            {{- end}}
        {{- end}}
        {{- end}}
        
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        {{if .Values.readinessProbe}}
        readinessProbe:
          tcpSocket:
            port: {{ $webPort }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
        {{- end}}
        {{if .Values.livenessProbe}}
        livenessProbe:
          tcpSocket:
            port: {{ $webPort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
        {{- end}}
        volumeMounts:
          {{if .Values.secrets.creds}}
          - mountPath: /etc/ace-creds
            name: ace-creds-volume
          {{- end}}
          {{if .Values.secrets.certs}}
          - mountPath: /etc/ace-certs
            name: ace-certs-volume
          {{- end}}
          {{if .Values.secrets.dbcerts}}
          - mountPath: /etc/ace-dbcerts
            name: acedb-cert-volume
          {{- end}}
          {{if .Values.secrets.sapcerts}}
          - mountPath: /etc/ace-sapcerts
            name: acesap-cert-volume
          {{- end}}
          {{if .Values.nfs}}
          - mountPath: /var/opt/interfaces
            name: ace-nfs
          {{- end}}
      volumes:
      {{if .Values.secrets.creds}}
      - name: ace-creds-volume
        secret:
          secretName: {{.Values.secrets.creds}}
      {{- end}}
      {{if .Values.secrets.certs}}
      - name: ace-certs-volume
        secret:
          secretName: {{.Values.secrets.certs}}
      {{- end}}
      {{if .Values.secrets.dbcerts}}
      - name: acedb-cert-volume
        secret:
          secretName: {{.Values.secrets.dbcerts}}
      {{- end}}
      {{if .Values.secrets.sapcerts}}
      - name: acesap-cert-volume
        secret:
          secretName: {{.Values.secrets.sapcerts}}
      {{- end}}
      {{if .Values.nfs}}
      - name: ace-nfs
        nfs:
          server: {{.Values.nfs.server}}
          path: {{.Values.nfs.path}}
      {{- end}}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30